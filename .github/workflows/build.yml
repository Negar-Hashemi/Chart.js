name: Test on Multiple OS

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest] # Operating systems to test
        node-version: [18, 20, 22]                      # Node.js versions to test
        browser: [chrome-latest, firefox-latest, safari-latest]
        attempt: [1, 2, 3, 4, 5, 6, 7, 8, 9]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies using pnpm
        run: pnpm install

      - name: Install Java and Firefox (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install firefox

      - name: Install Java and Firefox (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install firefox
          echo "FIREFOX_BIN=/Applications/Firefox.app/Contents/MacOS/firefox" >> $GITHUB_ENV

      - name: Install Java and Firefox (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install openjdk firefox
        shell: powershell

      - name: Run tests (Attempt ${{ matrix.attempt }}) on OS ${{ matrix.os }}, Node.js ${{ matrix.node-version }}, Browser ${{ matrix.browser }}
        shell: bash
        env:
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        run: |
          echo "Running tests on Node.js ${{ matrix.node-version }}, OS ${{ matrix.os }}, Browser ${{ matrix.browser }} (Attempt ${{ matrix.attempt }})"

          browser="${{ matrix.browser }}"
          os="${{ matrix.os }}"

          if [[ "$browser" == "chrome-latest" ]]; then
            npm run js-test-karma -- --browsers=ChromeHeadless
          elif [[ "$browser" == "firefox-latest" ]]; then
            npm run js-test-karma -- --browsers=FirefoxHeadless
          elif [[ "$browser" == "safari-latest" ]]; then
            if [[ "$os" == "macos-latest" ]]; then
              npm run js-test-karma -- --browsers=Safari
            else
              echo "Skipping Safari on non-macOS"
            fi
          else
            echo "Unknown browser: $browser"
            exit 1
          fi

